// automatically generated by Xtext
grammar nl.tue.gtl.TransformationQueryLanguage with org.eclipse.xtext.common.Terminals

import "http://www.example.org/assignment3" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BinaryOperationExpression returns BinaryOperationExpression:
	'BinaryOperationExpression'
	'{'
		('operation' operation=BinaryFunction)?
		'left' left=[Expression|EString]
		'right' right=[Expression|EString]
	'}';

Expression returns Expression:
	parameterExpression | BinaryOperationExpression | IntegerConstantExpression | BooleanConstantExpression | StringConstantExpression | FloatConstantExpression | InExpression | ParseExpression;

ConstantExpression returns ConstantExpression:
	IntegerConstantExpression | BooleanConstantExpression | StringConstantExpression | FloatConstantExpression;

enum BinaryFunction returns BinaryFunction:
				mult = 'mult' | sum = 'sum' | divide = 'divide' | concat = 'concat' | equal = 'equal' | notequal = 'notequal' | smaller = 'smaller' | greater = 'greater' | or = 'or' | and = 'and';

parameterExpression returns parameterExpression:
	{parameterExpression}
	'parameterExpression'
	;

IntegerConstantExpression returns IntegerConstantExpression:
	'IntegerConstantExpression'
	'{'
		'value' value=EInt
	'}';

BooleanConstantExpression returns BooleanConstantExpression:
	value?='value'
	'BooleanConstantExpression'
	;

StringConstantExpression returns StringConstantExpression:
	'StringConstantExpression'
	'{'
		'value' value=EString
	'}';

FloatConstantExpression returns FloatConstantExpression:
	'FloatConstantExpression'
	'{'
		'value' value=EFloat
	'}';

InExpression returns InExpression:
	'InExpression'
	'{'
		('statement' statement=[Expression|EString])?
		'constantSet' '(' constantSet+=[ConstantExpression|EString] ( "," constantSet+=[ConstantExpression|EString])* ')' 
	'}';

ParseExpression returns ParseExpression:
	'ParseExpression'
	'{'
		('outputType' outputType=Type)?
		'expression' expression=[Expression|EString]
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

EString returns ecore::EString:
	STRING | ID;

EFloat returns ecore::EFloat:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

enum Type returns Type:
				string = 'string' | integer = 'integer' | floats = 'floats' | sets = 'sets' | DateTime = 'DateTime' | Null = 'Null' | bool = 'bool';
