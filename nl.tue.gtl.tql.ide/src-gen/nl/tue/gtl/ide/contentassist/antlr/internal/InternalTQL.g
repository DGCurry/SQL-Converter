/*
 * generated by Xtext 2.27.0
 */
grammar InternalTQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package nl.tue.gtl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package nl.tue.gtl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import nl.tue.gtl.services.TQLGrammarAccess;

}
@parser::members {
	private TQLGrammarAccess grammarAccess;

	public void setGrammarAccess(TQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getAlternatives()); }
		(rule__Block__Alternatives)
		{ after(grammarAccess.getBlockAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable_Impl
entryRuleTable_Impl
:
{ before(grammarAccess.getTable_ImplRule()); }
	 ruleTable_Impl
{ after(grammarAccess.getTable_ImplRule()); } 
	 EOF 
;

// Rule Table_Impl
ruleTable_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTable_ImplAccess().getAlternatives()); }
		(rule__Table_Impl__Alternatives)
		{ after(grammarAccess.getTable_ImplAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource_Table
entryRuleSource_Table
:
{ before(grammarAccess.getSource_TableRule()); }
	 ruleSource_Table
{ after(grammarAccess.getSource_TableRule()); } 
	 EOF 
;

// Rule Source_Table
ruleSource_Table 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSource_TableAccess().getGroup()); }
		(rule__Source_Table__Group__0)
		{ after(grammarAccess.getSource_TableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTarget_Table
entryRuleTarget_Table
:
{ before(grammarAccess.getTarget_TableRule()); }
	 ruleTarget_Table
{ after(grammarAccess.getTarget_TableRule()); } 
	 EOF 
;

// Rule Target_Table
ruleTarget_Table 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTarget_TableAccess().getGroup()); }
		(rule__Target_Table__Group__0)
		{ after(grammarAccess.getTarget_TableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableField
entryRuleTableField
:
{ before(grammarAccess.getTableFieldRule()); }
	 ruleTableField
{ after(grammarAccess.getTableFieldRule()); } 
	 EOF 
;

// Rule TableField
ruleTableField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableFieldAccess().getGroup()); }
		(rule__TableField__Group__0)
		{ after(grammarAccess.getTableFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMappingField
entryRuleMappingField
:
{ before(grammarAccess.getMappingFieldRule()); }
	 ruleMappingField
{ after(grammarAccess.getMappingFieldRule()); } 
	 EOF 
;

// Rule MappingField
ruleMappingField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingFieldAccess().getGroup()); }
		(rule__MappingField__Group__0)
		{ after(grammarAccess.getMappingFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationCall
entryRuleTransformationCall
:
{ before(grammarAccess.getTransformationCallRule()); }
	 ruleTransformationCall
{ after(grammarAccess.getTransformationCallRule()); } 
	 EOF 
;

// Rule TransformationCall
ruleTransformationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationCallAccess().getGroup()); }
		(rule__TransformationCall__Group__0)
		{ after(grammarAccess.getTransformationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getTable_ImplParserRuleCall_0()); }
		ruleTable_Impl
		{ after(grammarAccess.getBlockAccess().getTable_ImplParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockAccess().getMappingParserRuleCall_1()); }
		ruleMapping
		{ after(grammarAccess.getBlockAccess().getMappingParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTable_ImplAccess().getGroup_0()); }
		(rule__Table_Impl__Group_0__0)
		{ after(grammarAccess.getTable_ImplAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTable_ImplAccess().getGroup_1()); }
		(rule__Table_Impl__Group_1__0)
		{ after(grammarAccess.getTable_ImplAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('string')
		{ after(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
		('integer')
		{ after(grammarAccess.getTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFloatsEnumLiteralDeclaration_2()); }
		('floats')
		{ after(grammarAccess.getTypeAccess().getFloatsEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSetsEnumLiteralDeclaration_3()); }
		('sets')
		{ after(grammarAccess.getTypeAccess().getSetsEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDateTimeEnumLiteralDeclaration_4()); }
		('DateTime')
		{ after(grammarAccess.getTypeAccess().getDateTimeEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNullEnumLiteralDeclaration_5()); }
		('Null')
		{ after(grammarAccess.getTypeAccess().getNullEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBoolEnumLiteralDeclaration_6()); }
		('bool')
		{ after(grammarAccess.getTypeAccess().getBoolEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_0__0__Impl
	rule__Table_Impl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getSourceKeyword_0_0()); }
	'source'
	{ after(grammarAccess.getTable_ImplAccess().getSourceKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getSource_TableParserRuleCall_0_1()); }
	ruleSource_Table
	{ after(grammarAccess.getTable_ImplAccess().getSource_TableParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table_Impl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_1__0__Impl
	rule__Table_Impl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getTargetKeyword_1_0()); }
	'target'
	{ after(grammarAccess.getTable_ImplAccess().getTargetKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getTarget_TableParserRuleCall_1_1()); }
	ruleTarget_Table
	{ after(grammarAccess.getTable_ImplAccess().getTarget_TableParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source_Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__0__Impl
	rule__Source_Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getNameAssignment_0()); }
	(rule__Source_Table__NameAssignment_0)
	{ after(grammarAccess.getSource_TableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__1__Impl
	rule__Source_Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSource_TableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__2__Impl
	rule__Source_Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getColumnsAssignment_2()); }
	(rule__Source_Table__ColumnsAssignment_2)
	{ after(grammarAccess.getSource_TableAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__3__Impl
	rule__Source_Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getGroup_3()); }
	(rule__Source_Table__Group_3__0)*
	{ after(grammarAccess.getSource_TableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSource_TableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source_Table__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group_3__0__Impl
	rule__Source_Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getSource_TableAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getColumnsAssignment_3_1()); }
	(rule__Source_Table__ColumnsAssignment_3_1)
	{ after(grammarAccess.getSource_TableAccess().getColumnsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target_Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__0__Impl
	rule__Target_Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getNameAssignment_0()); }
	(rule__Target_Table__NameAssignment_0)
	{ after(grammarAccess.getTarget_TableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__1__Impl
	rule__Target_Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTarget_TableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__2__Impl
	rule__Target_Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getColumnsAssignment_2()); }
	(rule__Target_Table__ColumnsAssignment_2)
	{ after(grammarAccess.getTarget_TableAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__3__Impl
	rule__Target_Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getGroup_3()); }
	(rule__Target_Table__Group_3__0)*
	{ after(grammarAccess.getTarget_TableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTarget_TableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target_Table__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group_3__0__Impl
	rule__Target_Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTarget_TableAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getColumnsAssignment_3_1()); }
	(rule__Target_Table__ColumnsAssignment_3_1)
	{ after(grammarAccess.getTarget_TableAccess().getColumnsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__0__Impl
	rule__TableField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getNameAssignment_0()); }
	(rule__TableField__NameAssignment_0)
	{ after(grammarAccess.getTableFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__1__Impl
	rule__TableField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTableFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__2__Impl
	rule__TableField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getTypeAssignment_2()); }
	(rule__TableField__TypeAssignment_2)
	{ after(grammarAccess.getTableFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getTableFieldAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
	'mapping'
	{ after(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getSourcetableAssignment_1()); }
	(rule__Mapping__SourcetableAssignment_1)
	{ after(grammarAccess.getMappingAccess().getSourcetableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
	'->'
	{ after(grammarAccess.getMappingAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getTargettableAssignment_3()); }
	(rule__Mapping__TargettableAssignment_3)
	{ after(grammarAccess.getMappingAccess().getTargettableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
	rule__Mapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getFieldsAssignment_5()); }
	(rule__Mapping__FieldsAssignment_5)
	{ after(grammarAccess.getMappingAccess().getFieldsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__0__Impl
	rule__MappingField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getMappingFieldKeyword_0()); }
	'MappingField'
	{ after(grammarAccess.getMappingFieldAccess().getMappingFieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__1__Impl
	rule__MappingField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMappingFieldAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__2__Impl
	rule__MappingField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getSouceFieldKeyword_2()); }
	'souceField'
	{ after(grammarAccess.getMappingFieldAccess().getSouceFieldKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__3__Impl
	rule__MappingField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getSouceFieldAssignment_3()); }
	(rule__MappingField__SouceFieldAssignment_3)
	{ after(grammarAccess.getMappingFieldAccess().getSouceFieldAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__4__Impl
	rule__MappingField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getTargetFieldKeyword_4()); }
	'targetField'
	{ after(grammarAccess.getMappingFieldAccess().getTargetFieldKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__5__Impl
	rule__MappingField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getTargetFieldAssignment_5()); }
	(rule__MappingField__TargetFieldAssignment_5)
	{ after(grammarAccess.getMappingFieldAccess().getTargetFieldAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__6__Impl
	rule__MappingField__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getGroup_6()); }
	(rule__MappingField__Group_6__0)?
	{ after(grammarAccess.getMappingFieldAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getMappingFieldAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingField__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6__0__Impl
	rule__MappingField__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getCallsKeyword_6_0()); }
	'calls'
	{ after(grammarAccess.getMappingFieldAccess().getCallsKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6__1__Impl
	rule__MappingField__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getLeftCurlyBracketKeyword_6_1()); }
	'{'
	{ after(grammarAccess.getMappingFieldAccess().getLeftCurlyBracketKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6__2__Impl
	rule__MappingField__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getCallsAssignment_6_2()); }
	(rule__MappingField__CallsAssignment_6_2)
	{ after(grammarAccess.getMappingFieldAccess().getCallsAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6__3__Impl
	rule__MappingField__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getGroup_6_3()); }
	(rule__MappingField__Group_6_3__0)*
	{ after(grammarAccess.getMappingFieldAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getRightCurlyBracketKeyword_6_4()); }
	'}'
	{ after(grammarAccess.getMappingFieldAccess().getRightCurlyBracketKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MappingField__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6_3__0__Impl
	rule__MappingField__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getCommaKeyword_6_3_0()); }
	','
	{ after(grammarAccess.getMappingFieldAccess().getCommaKeyword_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MappingField__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingFieldAccess().getCallsAssignment_6_3_1()); }
	(rule__MappingField__CallsAssignment_6_3_1)
	{ after(grammarAccess.getMappingFieldAccess().getCallsAssignment_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__0__Impl
	rule__TransformationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getTransformationCallKeyword_0()); }
	'TransformationCall'
	{ after(grammarAccess.getTransformationCallAccess().getTransformationCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__1__Impl
	rule__TransformationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTransformationCallAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__2__Impl
	rule__TransformationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getGroup_2()); }
	(rule__TransformationCall__Group_2__0)?
	{ after(grammarAccess.getTransformationCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getTransformationCallAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2__0__Impl
	rule__TransformationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersKeyword_2_0()); }
	'parameters'
	{ after(grammarAccess.getTransformationCallAccess().getParametersKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2__1__Impl
	rule__TransformationCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getTransformationCallAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2__2__Impl
	rule__TransformationCall__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersAssignment_2_2()); }
	(rule__TransformationCall__ParametersAssignment_2_2)
	{ after(grammarAccess.getTransformationCallAccess().getParametersAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2__3__Impl
	rule__TransformationCall__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getGroup_2_3()); }
	(rule__TransformationCall__Group_2_3__0)*
	{ after(grammarAccess.getTransformationCallAccess().getGroup_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getRightParenthesisKeyword_2_4()); }
	')'
	{ after(grammarAccess.getTransformationCallAccess().getRightParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group_2_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2_3__0__Impl
	rule__TransformationCall__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getCommaKeyword_2_3_0()); }
	','
	{ after(grammarAccess.getTransformationCallAccess().getCommaKeyword_2_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_2_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersAssignment_2_3_1()); }
	(rule__TransformationCall__ParametersAssignment_2_3_1)
	{ after(grammarAccess.getTransformationCallAccess().getParametersAssignment_2_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source_Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getSource_TableAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
		ruleTableField
		{ after(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__ColumnsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
		ruleTableField
		{ after(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getTarget_TableAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
		ruleTableField
		{ after(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__ColumnsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
		ruleTableField
		{ after(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableFieldAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getTableFieldAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableFieldAccess().getTypeTypeEnumRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTableFieldAccess().getTypeTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__SourcetableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getSourcetableSourceTableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getSourcetableSourceTableEStringParserRuleCall_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getMappingAccess().getSourcetableSourceTableEStringParserRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getSourcetableSourceTableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__TargettableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getTargettableTargetTableCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getTargettableTargetTableEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getMappingAccess().getTargettableTargetTableEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getTargettableTargetTableCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__FieldsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getFieldsMappingFieldParserRuleCall_5_0()); }
		ruleMappingField
		{ after(grammarAccess.getMappingAccess().getFieldsMappingFieldParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__SouceFieldAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFieldAccess().getSouceFieldTableFieldCrossReference_3_0()); }
		(
			{ before(grammarAccess.getMappingFieldAccess().getSouceFieldTableFieldEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getMappingFieldAccess().getSouceFieldTableFieldEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getMappingFieldAccess().getSouceFieldTableFieldCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__TargetFieldAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFieldAccess().getTargetFieldTableFieldCrossReference_5_0()); }
		(
			{ before(grammarAccess.getMappingFieldAccess().getTargetFieldTableFieldEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getMappingFieldAccess().getTargetFieldTableFieldEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getMappingFieldAccess().getTargetFieldTableFieldCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__CallsAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFieldAccess().getCallsTransformationCallParserRuleCall_6_2_0()); }
		ruleTransformationCall
		{ after(grammarAccess.getMappingFieldAccess().getCallsTransformationCallParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MappingField__CallsAssignment_6_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingFieldAccess().getCallsTransformationCallParserRuleCall_6_3_1_0()); }
		ruleTransformationCall
		{ after(grammarAccess.getMappingFieldAccess().getCallsTransformationCallParserRuleCall_6_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__ParametersAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_2_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__ParametersAssignment_2_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_2_3_1_0()); }
		(
			{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_2_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_2_3_1_0_1()); }
		)
		{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_2_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
