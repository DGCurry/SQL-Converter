/*
 * generated by Xtext 2.27.0
 */
grammar InternalTQL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.tql.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.tql.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.tql.services.TQLGrammarAccess;

}
@parser::members {
	private TQLGrammarAccess grammarAccess;

	public void setGrammarAccess(TQLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTQL
entryRuleTQL
:
{ before(grammarAccess.getTQLRule()); }
	 ruleTQL
{ after(grammarAccess.getTQLRule()); } 
	 EOF 
;

// Rule TQL
ruleTQL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTQLAccess().getBlocksAssignment()); }
		(rule__TQL__BlocksAssignment)
		{ after(grammarAccess.getTQLAccess().getBlocksAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getTable_ImplParserRuleCall()); }
		ruleTable_Impl
		{ after(grammarAccess.getBlockAccess().getTable_ImplParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable_Impl
entryRuleTable_Impl
:
{ before(grammarAccess.getTable_ImplRule()); }
	 ruleTable_Impl
{ after(grammarAccess.getTable_ImplRule()); } 
	 EOF 
;

// Rule Table_Impl
ruleTable_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTable_ImplAccess().getAlternatives()); }
		(rule__Table_Impl__Alternatives)
		{ after(grammarAccess.getTable_ImplAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSource_Table
entryRuleSource_Table
:
{ before(grammarAccess.getSource_TableRule()); }
	 ruleSource_Table
{ after(grammarAccess.getSource_TableRule()); } 
	 EOF 
;

// Rule Source_Table
ruleSource_Table 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSource_TableAccess().getGroup()); }
		(rule__Source_Table__Group__0)
		{ after(grammarAccess.getSource_TableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTarget_Table
entryRuleTarget_Table
:
{ before(grammarAccess.getTarget_TableRule()); }
	 ruleTarget_Table
{ after(grammarAccess.getTarget_TableRule()); } 
	 EOF 
;

// Rule Target_Table
ruleTarget_Table 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTarget_TableAccess().getGroup()); }
		(rule__Target_Table__Group__0)
		{ after(grammarAccess.getTarget_TableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableField
entryRuleTableField
:
{ before(grammarAccess.getTableFieldRule()); }
	 ruleTableField
{ after(grammarAccess.getTableFieldRule()); } 
	 EOF 
;

// Rule TableField
ruleTableField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableFieldAccess().getGroup()); }
		(rule__TableField__Group__0)
		{ after(grammarAccess.getTableFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getConditionalStatementParserRuleCall()); }
		ruleConditionalStatement
		{ after(grammarAccess.getStatementAccess().getConditionalStatementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanOperationExpression
entryRuleBooleanOperationExpression
:
{ before(grammarAccess.getBooleanOperationExpressionRule()); }
	 ruleBooleanOperationExpression
{ after(grammarAccess.getBooleanOperationExpressionRule()); } 
	 EOF 
;

// Rule BooleanOperationExpression
ruleBooleanOperationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanOperationExpressionAccess().getGroup()); }
		(rule__BooleanOperationExpression__Group__0)
		{ after(grammarAccess.getBooleanOperationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTransformationCall
entryRuleTransformationCall
:
{ before(grammarAccess.getTransformationCallRule()); }
	 ruleTransformationCall
{ after(grammarAccess.getTransformationCallRule()); } 
	 EOF 
;

// Rule TransformationCall
ruleTransformationCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTransformationCallAccess().getGroup()); }
		(rule__TransformationCall__Group__0)
		{ after(grammarAccess.getTransformationCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameterExpression
entryRuleparameterExpression
:
{ before(grammarAccess.getParameterExpressionRule()); }
	 ruleparameterExpression
{ after(grammarAccess.getParameterExpressionRule()); } 
	 EOF 
;

// Rule parameterExpression
ruleparameterExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterExpressionAccess().getGroup()); }
		(rule__ParameterExpression__Group__0)
		{ after(grammarAccess.getParameterExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringConstantExpression
entryRuleStringConstantExpression
:
{ before(grammarAccess.getStringConstantExpressionRule()); }
	 ruleStringConstantExpression
{ after(grammarAccess.getStringConstantExpressionRule()); } 
	 EOF 
;

// Rule StringConstantExpression
ruleStringConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringConstantExpressionAccess().getGroup()); }
		(rule__StringConstantExpression__Group__0)
		{ after(grammarAccess.getStringConstantExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanConstantExpression
entryRuleBooleanConstantExpression
:
{ before(grammarAccess.getBooleanConstantExpressionRule()); }
	 ruleBooleanConstantExpression
{ after(grammarAccess.getBooleanConstantExpressionRule()); } 
	 EOF 
;

// Rule BooleanConstantExpression
ruleBooleanConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanConstantExpressionAccess().getGroup()); }
		(rule__BooleanConstantExpression__Group__0)
		{ after(grammarAccess.getBooleanConstantExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerConstantExpression
entryRuleIntegerConstantExpression
:
{ before(grammarAccess.getIntegerConstantExpressionRule()); }
	 ruleIntegerConstantExpression
{ after(grammarAccess.getIntegerConstantExpressionRule()); } 
	 EOF 
;

// Rule IntegerConstantExpression
ruleIntegerConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerConstantExpressionAccess().getGroup()); }
		(rule__IntegerConstantExpression__Group__0)
		{ after(grammarAccess.getIntegerConstantExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInExpression
entryRuleInExpression
:
{ before(grammarAccess.getInExpressionRule()); }
	 ruleInExpression
{ after(grammarAccess.getInExpressionRule()); } 
	 EOF 
;

// Rule InExpression
ruleInExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInExpressionAccess().getGroup()); }
		(rule__InExpression__Group__0)
		{ after(grammarAccess.getInExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalStatement
entryRuleConditionalStatement
:
{ before(grammarAccess.getConditionalStatementRule()); }
	 ruleConditionalStatement
{ after(grammarAccess.getConditionalStatementRule()); } 
	 EOF 
;

// Rule ConditionalStatement
ruleConditionalStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getGroup()); }
		(rule__ConditionalStatement__Group__0)
		{ after(grammarAccess.getConditionalStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParseExpression
entryRuleParseExpression
:
{ before(grammarAccess.getParseExpressionRule()); }
	 ruleParseExpression
{ after(grammarAccess.getParseExpressionRule()); } 
	 EOF 
;

// Rule ParseExpression
ruleParseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParseExpressionAccess().getGroup()); }
		(rule__ParseExpression__Group__0)
		{ after(grammarAccess.getParseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatConstantExpression
entryRuleFloatConstantExpression
:
{ before(grammarAccess.getFloatConstantExpressionRule()); }
	 ruleFloatConstantExpression
{ after(grammarAccess.getFloatConstantExpressionRule()); } 
	 EOF 
;

// Rule FloatConstantExpression
ruleFloatConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatConstantExpressionAccess().getGroup()); }
		(rule__FloatConstantExpression__Group__0)
		{ after(grammarAccess.getFloatConstantExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOperationExpression
entryRuleBinaryOperationExpression
:
{ before(grammarAccess.getBinaryOperationExpressionRule()); }
	 ruleBinaryOperationExpression
{ after(grammarAccess.getBinaryOperationExpressionRule()); } 
	 EOF 
;

// Rule BinaryOperationExpression
ruleBinaryOperationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOperationExpressionAccess().getGroup()); }
		(rule__BinaryOperationExpression__Group__0)
		{ after(grammarAccess.getBinaryOperationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEFloat
entryRuleEFloat
:
{ before(grammarAccess.getEFloatRule()); }
	 ruleEFloat
{ after(grammarAccess.getEFloatRule()); } 
	 EOF 
;

// Rule EFloat
ruleEFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEFloatAccess().getGroup()); }
		(rule__EFloat__Group__0)
		{ after(grammarAccess.getEFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Type
ruleType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanFunction
ruleBooleanFunction
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getAlternatives()); }
		(rule__BooleanFunction__Alternatives)
		{ after(grammarAccess.getBooleanFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BinaryFunction
ruleBinaryFunction
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFunctionAccess().getAlternatives()); }
		(rule__BinaryFunction__Alternatives)
		{ after(grammarAccess.getBinaryFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTable_ImplAccess().getGroup_0()); }
		(rule__Table_Impl__Group_0__0)
		{ after(grammarAccess.getTable_ImplAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTable_ImplAccess().getGroup_1()); }
		(rule__Table_Impl__Group_1__0)
		{ after(grammarAccess.getTable_ImplAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getParameterExpressionParserRuleCall_0()); }
		ruleparameterExpression
		{ after(grammarAccess.getExpressionAccess().getParameterExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getStringConstantExpressionParserRuleCall_1()); }
		ruleStringConstantExpression
		{ after(grammarAccess.getExpressionAccess().getStringConstantExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanConstantExpressionParserRuleCall_2()); }
		ruleBooleanConstantExpression
		{ after(grammarAccess.getExpressionAccess().getBooleanConstantExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getIntegerConstantExpressionParserRuleCall_3()); }
		ruleIntegerConstantExpression
		{ after(grammarAccess.getExpressionAccess().getIntegerConstantExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getInExpressionParserRuleCall_4()); }
		ruleInExpression
		{ after(grammarAccess.getExpressionAccess().getInExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getConditionalStatementParserRuleCall_5()); }
		ruleConditionalStatement
		{ after(grammarAccess.getExpressionAccess().getConditionalStatementParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getParseExpressionParserRuleCall_6()); }
		ruleParseExpression
		{ after(grammarAccess.getExpressionAccess().getParseExpressionParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getFloatConstantExpressionParserRuleCall_7()); }
		ruleFloatConstantExpression
		{ after(grammarAccess.getExpressionAccess().getFloatConstantExpressionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBinaryOperationExpressionParserRuleCall_8()); }
		ruleBinaryOperationExpression
		{ after(grammarAccess.getExpressionAccess().getBinaryOperationExpressionParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBooleanOperationExpressionParserRuleCall_9()); }
		ruleBooleanOperationExpression
		{ after(grammarAccess.getExpressionAccess().getBooleanOperationExpressionParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEFloatAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('string')
		{ after(grammarAccess.getTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
		('integer')
		{ after(grammarAccess.getTypeAccess().getIntegerEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getFloatsEnumLiteralDeclaration_2()); }
		('floats')
		{ after(grammarAccess.getTypeAccess().getFloatsEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSetsEnumLiteralDeclaration_3()); }
		('sets')
		{ after(grammarAccess.getTypeAccess().getSetsEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getDateTimeEnumLiteralDeclaration_4()); }
		('DateTime')
		{ after(grammarAccess.getTypeAccess().getDateTimeEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNullEnumLiteralDeclaration_5()); }
		('Null')
		{ after(grammarAccess.getTypeAccess().getNullEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getBoolEnumLiteralDeclaration_6()); }
		('bool')
		{ after(grammarAccess.getTypeAccess().getBoolEnumLiteralDeclaration_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getEqualEnumLiteralDeclaration_0()); }
		('equal')
		{ after(grammarAccess.getBooleanFunctionAccess().getEqualEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getNotequalEnumLiteralDeclaration_1()); }
		('notequal')
		{ after(grammarAccess.getBooleanFunctionAccess().getNotequalEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getSmallerEnumLiteralDeclaration_2()); }
		('smaller')
		{ after(grammarAccess.getBooleanFunctionAccess().getSmallerEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getGreaterEnumLiteralDeclaration_3()); }
		('greater')
		{ after(grammarAccess.getBooleanFunctionAccess().getGreaterEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getOrEnumLiteralDeclaration_4()); }
		('or')
		{ after(grammarAccess.getBooleanFunctionAccess().getOrEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanFunctionAccess().getAndEnumLiteralDeclaration_5()); }
		('and')
		{ after(grammarAccess.getBooleanFunctionAccess().getAndEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryFunction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryFunctionAccess().getMultEnumLiteralDeclaration_0()); }
		('mult')
		{ after(grammarAccess.getBinaryFunctionAccess().getMultEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryFunctionAccess().getSumEnumLiteralDeclaration_1()); }
		('sum')
		{ after(grammarAccess.getBinaryFunctionAccess().getSumEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryFunctionAccess().getDivideEnumLiteralDeclaration_2()); }
		('divide')
		{ after(grammarAccess.getBinaryFunctionAccess().getDivideEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryFunctionAccess().getConcatEnumLiteralDeclaration_3()); }
		('concat')
		{ after(grammarAccess.getBinaryFunctionAccess().getConcatEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_0__0__Impl
	rule__Table_Impl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getSourceKeyword_0_0()); }
	'source'
	{ after(grammarAccess.getTable_ImplAccess().getSourceKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getSource_TableParserRuleCall_0_1()); }
	ruleSource_Table
	{ after(grammarAccess.getTable_ImplAccess().getSource_TableParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table_Impl__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_1__0__Impl
	rule__Table_Impl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getTargetKeyword_1_0()); }
	'target'
	{ after(grammarAccess.getTable_ImplAccess().getTargetKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table_Impl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table_Impl__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTable_ImplAccess().getTarget_TableParserRuleCall_1_1()); }
	ruleTarget_Table
	{ after(grammarAccess.getTable_ImplAccess().getTarget_TableParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source_Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__0__Impl
	rule__Source_Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getNameAssignment_0()); }
	(rule__Source_Table__NameAssignment_0)
	{ after(grammarAccess.getSource_TableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__1__Impl
	rule__Source_Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSource_TableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__2__Impl
	rule__Source_Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getColumnsAssignment_2()); }
	(rule__Source_Table__ColumnsAssignment_2)
	{ after(grammarAccess.getSource_TableAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__3__Impl
	rule__Source_Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getGroup_3()); }
	(rule__Source_Table__Group_3__0)*
	{ after(grammarAccess.getSource_TableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getSource_TableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Source_Table__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group_3__0__Impl
	rule__Source_Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getSource_TableAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Source_Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSource_TableAccess().getColumnsAssignment_3_1()); }
	(rule__Source_Table__ColumnsAssignment_3_1)
	{ after(grammarAccess.getSource_TableAccess().getColumnsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target_Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__0__Impl
	rule__Target_Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getNameAssignment_0()); }
	(rule__Target_Table__NameAssignment_0)
	{ after(grammarAccess.getTarget_TableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__1__Impl
	rule__Target_Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTarget_TableAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__2__Impl
	rule__Target_Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getColumnsAssignment_2()); }
	(rule__Target_Table__ColumnsAssignment_2)
	{ after(grammarAccess.getTarget_TableAccess().getColumnsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__3__Impl
	rule__Target_Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getGroup_3()); }
	(rule__Target_Table__Group_3__0)*
	{ after(grammarAccess.getTarget_TableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTarget_TableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target_Table__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group_3__0__Impl
	rule__Target_Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTarget_TableAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target_Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTarget_TableAccess().getColumnsAssignment_3_1()); }
	(rule__Target_Table__ColumnsAssignment_3_1)
	{ after(grammarAccess.getTarget_TableAccess().getColumnsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__0__Impl
	rule__TableField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getNameAssignment_0()); }
	(rule__TableField__NameAssignment_0)
	{ after(grammarAccess.getTableFieldAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__1__Impl
	rule__TableField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getTableFieldAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__2__Impl
	rule__TableField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getTypeAssignment_2()); }
	(rule__TableField__TypeAssignment_2)
	{ after(grammarAccess.getTableFieldAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableField__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableFieldAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getTableFieldAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__0__Impl
	rule__BooleanOperationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getBooleanOperationExpressionKeyword_0()); }
	'BooleanOperationExpression'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getBooleanOperationExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__1__Impl
	rule__BooleanOperationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__2__Impl
	rule__BooleanOperationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getGroup_2()); }
	(rule__BooleanOperationExpression__Group_2__0)?
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__3__Impl
	rule__BooleanOperationExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getRightKeyword_3()); }
	'right'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getRightKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__4__Impl
	rule__BooleanOperationExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getRightAssignment_4()); }
	(rule__BooleanOperationExpression__RightAssignment_4)
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__5__Impl
	rule__BooleanOperationExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getLeftKeyword_5()); }
	'left'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getLeftKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__6__Impl
	rule__BooleanOperationExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getLeftAssignment_6()); }
	(rule__BooleanOperationExpression__LeftAssignment_6)
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getLeftAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanOperationExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group_2__0__Impl
	rule__BooleanOperationExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getOperationKeyword_2_0()); }
	'operation'
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getOperationKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanOperationExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanOperationExpressionAccess().getOperationAssignment_2_1()); }
	(rule__BooleanOperationExpression__OperationAssignment_2_1)
	{ after(grammarAccess.getBooleanOperationExpressionAccess().getOperationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__0__Impl
	rule__TransformationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getTransformationCallKeyword_0()); }
	'TransformationCall'
	{ after(grammarAccess.getTransformationCallAccess().getTransformationCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__1__Impl
	rule__TransformationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getTransformationCallAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__2__Impl
	rule__TransformationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getTransformationKeyword_2()); }
	'transformation'
	{ after(grammarAccess.getTransformationCallAccess().getTransformationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__3__Impl
	rule__TransformationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getTransformationAssignment_3()); }
	(rule__TransformationCall__TransformationAssignment_3)
	{ after(grammarAccess.getTransformationCallAccess().getTransformationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__4__Impl
	rule__TransformationCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getGroup_4()); }
	(rule__TransformationCall__Group_4__0)?
	{ after(grammarAccess.getTransformationCallAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTransformationCallAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4__0__Impl
	rule__TransformationCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersKeyword_4_0()); }
	'parameters'
	{ after(grammarAccess.getTransformationCallAccess().getParametersKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4__1__Impl
	rule__TransformationCall__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getLeftParenthesisKeyword_4_1()); }
	'('
	{ after(grammarAccess.getTransformationCallAccess().getLeftParenthesisKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4__2__Impl
	rule__TransformationCall__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersAssignment_4_2()); }
	(rule__TransformationCall__ParametersAssignment_4_2)
	{ after(grammarAccess.getTransformationCallAccess().getParametersAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4__3__Impl
	rule__TransformationCall__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getGroup_4_3()); }
	(rule__TransformationCall__Group_4_3__0)*
	{ after(grammarAccess.getTransformationCallAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getRightParenthesisKeyword_4_4()); }
	')'
	{ after(grammarAccess.getTransformationCallAccess().getRightParenthesisKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TransformationCall__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4_3__0__Impl
	rule__TransformationCall__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getTransformationCallAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TransformationCall__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTransformationCallAccess().getParametersAssignment_4_3_1()); }
	(rule__TransformationCall__ParametersAssignment_4_3_1)
	{ after(grammarAccess.getTransformationCallAccess().getParametersAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterExpression__Group__0__Impl
	rule__ParameterExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterExpressionAccess().getParameterExpressionKeyword_0()); }
	'parameterExpression'
	{ after(grammarAccess.getParameterExpressionAccess().getParameterExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterExpression__Group__1__Impl
	rule__ParameterExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getParameterExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterExpression__Group__2__Impl
	rule__ParameterExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterExpressionAccess().getParameterKeyword_2()); }
	'parameter'
	{ after(grammarAccess.getParameterExpressionAccess().getParameterKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterExpression__Group__3__Impl
	rule__ParameterExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterExpressionAccess().getParameterAssignment_3()); }
	(rule__ParameterExpression__ParameterAssignment_3)
	{ after(grammarAccess.getParameterExpressionAccess().getParameterAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getParameterExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringConstantExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringConstantExpression__Group__0__Impl
	rule__StringConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringConstantExpressionAccess().getStringConstantExpressionKeyword_0()); }
	'StringConstantExpression'
	{ after(grammarAccess.getStringConstantExpressionAccess().getStringConstantExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringConstantExpression__Group__1__Impl
	rule__StringConstantExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStringConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringConstantExpression__Group__2__Impl
	rule__StringConstantExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringConstantExpressionAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getStringConstantExpressionAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringConstantExpression__Group__3__Impl
	rule__StringConstantExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringConstantExpressionAccess().getValueAssignment_3()); }
	(rule__StringConstantExpression__ValueAssignment_3)
	{ after(grammarAccess.getStringConstantExpressionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringConstantExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getStringConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanConstantExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanConstantExpression__Group__0__Impl
	rule__BooleanConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstantExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanConstantExpressionAccess().getValueAssignment_0()); }
	(rule__BooleanConstantExpression__ValueAssignment_0)
	{ after(grammarAccess.getBooleanConstantExpressionAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstantExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanConstantExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstantExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanConstantExpressionAccess().getBooleanConstantExpressionKeyword_1()); }
	'BooleanConstantExpression'
	{ after(grammarAccess.getBooleanConstantExpressionAccess().getBooleanConstantExpressionKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerConstantExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerConstantExpression__Group__0__Impl
	rule__IntegerConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerConstantExpressionAccess().getIntegerConstantExpressionKeyword_0()); }
	'IntegerConstantExpression'
	{ after(grammarAccess.getIntegerConstantExpressionAccess().getIntegerConstantExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerConstantExpression__Group__1__Impl
	rule__IntegerConstantExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getIntegerConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerConstantExpression__Group__2__Impl
	rule__IntegerConstantExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerConstantExpressionAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getIntegerConstantExpressionAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerConstantExpression__Group__3__Impl
	rule__IntegerConstantExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerConstantExpressionAccess().getValueAssignment_3()); }
	(rule__IntegerConstantExpression__ValueAssignment_3)
	{ after(grammarAccess.getIntegerConstantExpressionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerConstantExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getIntegerConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__0__Impl
	rule__InExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getInExpressionKeyword_0()); }
	'InExpression'
	{ after(grammarAccess.getInExpressionAccess().getInExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__1__Impl
	rule__InExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__2__Impl
	rule__InExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getGroup_2()); }
	(rule__InExpression__Group_2__0)?
	{ after(grammarAccess.getInExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__3__Impl
	rule__InExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getConstantSetKeyword_3()); }
	'constantSet'
	{ after(grammarAccess.getInExpressionAccess().getConstantSetKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__4__Impl
	rule__InExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getInExpressionAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__5__Impl
	rule__InExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getConstantSetAssignment_5()); }
	(rule__InExpression__ConstantSetAssignment_5)
	{ after(grammarAccess.getInExpressionAccess().getConstantSetAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__6__Impl
	rule__InExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getGroup_6()); }
	(rule__InExpression__Group_6__0)*
	{ after(grammarAccess.getInExpressionAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__7__Impl
	rule__InExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getInExpressionAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getInExpressionAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group_2__0__Impl
	rule__InExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getStatementKeyword_2_0()); }
	'statement'
	{ after(grammarAccess.getInExpressionAccess().getStatementKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getStatementAssignment_2_1()); }
	(rule__InExpression__StatementAssignment_2_1)
	{ after(grammarAccess.getInExpressionAccess().getStatementAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InExpression__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group_6__0__Impl
	rule__InExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getInExpressionAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInExpressionAccess().getConstantSetAssignment_6_1()); }
	(rule__InExpression__ConstantSetAssignment_6_1)
	{ after(grammarAccess.getInExpressionAccess().getConstantSetAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__0__Impl
	rule__ConditionalStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getConditionalStatementKeyword_0()); }
	'ConditionalStatement'
	{ after(grammarAccess.getConditionalStatementAccess().getConditionalStatementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__1__Impl
	rule__ConditionalStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__2__Impl
	rule__ConditionalStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getConditionKeyword_2()); }
	'condition'
	{ after(grammarAccess.getConditionalStatementAccess().getConditionKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__3__Impl
	rule__ConditionalStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getConditionAssignment_3()); }
	(rule__ConditionalStatement__ConditionAssignment_3)
	{ after(grammarAccess.getConditionalStatementAccess().getConditionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__4__Impl
	rule__ConditionalStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionKeyword_4()); }
	'booleanoperationexpression'
	{ after(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__5__Impl
	rule__ConditionalStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionAssignment_5()); }
	(rule__ConditionalStatement__BooleanoperationexpressionAssignment_5)
	{ after(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__6__Impl
	rule__ConditionalStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getIfBodyKeyword_6()); }
	'ifBody'
	{ after(grammarAccess.getConditionalStatementAccess().getIfBodyKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__7__Impl
	rule__ConditionalStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__8__Impl
	rule__ConditionalStatement__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getIfBodyAssignment_8()); }
	(rule__ConditionalStatement__IfBodyAssignment_8)
	{ after(grammarAccess.getConditionalStatementAccess().getIfBodyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__9__Impl
	rule__ConditionalStatement__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getGroup_9()); }
	(rule__ConditionalStatement__Group_9__0)*
	{ after(grammarAccess.getConditionalStatementAccess().getGroup_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__10__Impl
	rule__ConditionalStatement__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__11__Impl
	rule__ConditionalStatement__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getElseBodyKeyword_11()); }
	'elseBody'
	{ after(grammarAccess.getConditionalStatementAccess().getElseBodyKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__12__Impl
	rule__ConditionalStatement__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_12()); }
	'{'
	{ after(grammarAccess.getConditionalStatementAccess().getLeftCurlyBracketKeyword_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__13__Impl
	rule__ConditionalStatement__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getElseBodyAssignment_13()); }
	(rule__ConditionalStatement__ElseBodyAssignment_13)
	{ after(grammarAccess.getConditionalStatementAccess().getElseBodyAssignment_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__14__Impl
	rule__ConditionalStatement__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getGroup_14()); }
	(rule__ConditionalStatement__Group_14__0)*
	{ after(grammarAccess.getConditionalStatementAccess().getGroup_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__15__Impl
	rule__ConditionalStatement__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_15()); }
	'}'
	{ after(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group__16__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_16()); }
	'}'
	{ after(grammarAccess.getConditionalStatementAccess().getRightCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group_9__0__Impl
	rule__ConditionalStatement__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getCommaKeyword_9_0()); }
	','
	{ after(grammarAccess.getConditionalStatementAccess().getCommaKeyword_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getIfBodyAssignment_9_1()); }
	(rule__ConditionalStatement__IfBodyAssignment_9_1)
	{ after(grammarAccess.getConditionalStatementAccess().getIfBodyAssignment_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalStatement__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group_14__0__Impl
	rule__ConditionalStatement__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getCommaKeyword_14_0()); }
	','
	{ after(grammarAccess.getConditionalStatementAccess().getCommaKeyword_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalStatement__Group_14__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalStatementAccess().getElseBodyAssignment_14_1()); }
	(rule__ConditionalStatement__ElseBodyAssignment_14_1)
	{ after(grammarAccess.getConditionalStatementAccess().getElseBodyAssignment_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__0__Impl
	rule__ParseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getParseExpressionKeyword_0()); }
	'ParseExpression'
	{ after(grammarAccess.getParseExpressionAccess().getParseExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__1__Impl
	rule__ParseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getParseExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__2__Impl
	rule__ParseExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getGroup_2()); }
	(rule__ParseExpression__Group_2__0)?
	{ after(grammarAccess.getParseExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__3__Impl
	rule__ParseExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getExpressionKeyword_3()); }
	'expression'
	{ after(grammarAccess.getParseExpressionAccess().getExpressionKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__4__Impl
	rule__ParseExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getExpressionAssignment_4()); }
	(rule__ParseExpression__ExpressionAssignment_4)
	{ after(grammarAccess.getParseExpressionAccess().getExpressionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getParseExpressionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParseExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group_2__0__Impl
	rule__ParseExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getOutputTypeKeyword_2_0()); }
	'outputType'
	{ after(grammarAccess.getParseExpressionAccess().getOutputTypeKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParseExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParseExpressionAccess().getOutputTypeAssignment_2_1()); }
	(rule__ParseExpression__OutputTypeAssignment_2_1)
	{ after(grammarAccess.getParseExpressionAccess().getOutputTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatConstantExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConstantExpression__Group__0__Impl
	rule__FloatConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstantExpressionAccess().getFloatConstantExpressionKeyword_0()); }
	'FloatConstantExpression'
	{ after(grammarAccess.getFloatConstantExpressionAccess().getFloatConstantExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConstantExpression__Group__1__Impl
	rule__FloatConstantExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getFloatConstantExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConstantExpression__Group__2__Impl
	rule__FloatConstantExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstantExpressionAccess().getValueKeyword_2()); }
	'value'
	{ after(grammarAccess.getFloatConstantExpressionAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConstantExpression__Group__3__Impl
	rule__FloatConstantExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstantExpressionAccess().getValueAssignment_3()); }
	(rule__FloatConstantExpression__ValueAssignment_3)
	{ after(grammarAccess.getFloatConstantExpressionAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConstantExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getFloatConstantExpressionAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__0__Impl
	rule__BinaryOperationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getBinaryOperationExpressionKeyword_0()); }
	'BinaryOperationExpression'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getBinaryOperationExpressionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__1__Impl
	rule__BinaryOperationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__2__Impl
	rule__BinaryOperationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getGroup_2()); }
	(rule__BinaryOperationExpression__Group_2__0)?
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__3__Impl
	rule__BinaryOperationExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getRightKeyword_3()); }
	'right'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getRightKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__4__Impl
	rule__BinaryOperationExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getRightAssignment_4()); }
	(rule__BinaryOperationExpression__RightAssignment_4)
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__5__Impl
	rule__BinaryOperationExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getLeftKeyword_5()); }
	'left'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getLeftKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__6__Impl
	rule__BinaryOperationExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getLeftAssignment_6()); }
	(rule__BinaryOperationExpression__LeftAssignment_6)
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getLeftAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryOperationExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group_2__0__Impl
	rule__BinaryOperationExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getOperationKeyword_2_0()); }
	'operation'
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getOperationKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryOperationExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryOperationExpressionAccess().getOperationAssignment_2_1()); }
	(rule__BinaryOperationExpression__OperationAssignment_2_1)
	{ after(grammarAccess.getBinaryOperationExpressionAccess().getOperationAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterAction_0()); }
	()
	{ after(grammarAccess.getParameterAccess().getParameterAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterKeyword_1()); }
	'Parameter'
	{ after(grammarAccess.getParameterAccess().getParameterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_3()); }
	(rule__Parameter__Group_3__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_4()); }
	(rule__Parameter__Group_4__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLabelKeyword_3_0()); }
	'label'
	{ after(grammarAccess.getParameterAccess().getLabelKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLabelAssignment_3_1()); }
	(rule__Parameter__LabelAssignment_3_1)
	{ after(grammarAccess.getParameterAccess().getLabelAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_4__0__Impl
	rule__Parameter__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeKeyword_4_0()); }
	'type'
	{ after(grammarAccess.getParameterAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_4_1()); }
	(rule__Parameter__TypeAssignment_4_1)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__0__Impl
	rule__EFloat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__1__Impl
	rule__EFloat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__2__Impl
	rule__EFloat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEFloatAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__3__Impl
	rule__EFloat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getGroup_4()); }
	(rule__EFloat__Group_4__0)?
	{ after(grammarAccess.getEFloatAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EFloat__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__0__Impl
	rule__EFloat__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
	(rule__EFloat__Alternatives_4_0)
	{ after(grammarAccess.getEFloatAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__1__Impl
	rule__EFloat__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEFloatAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EFloat__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EFloat__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEFloatAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TQL__BlocksAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTQLAccess().getBlocksBlockParserRuleCall_0()); }
		ruleBlock
		{ after(grammarAccess.getTQLAccess().getBlocksBlockParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getSource_TableAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
		ruleTableField
		{ after(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Source_Table__ColumnsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
		ruleTableField
		{ after(grammarAccess.getSource_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getTarget_TableAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__ColumnsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
		ruleTableField
		{ after(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target_Table__ColumnsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
		ruleTableField
		{ after(grammarAccess.getTarget_TableAccess().getColumnsTableFieldParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableFieldAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getTableFieldAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableField__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableFieldAccess().getTypeTypeEnumRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getTableFieldAccess().getTypeTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__OperationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationExpressionAccess().getOperationBooleanFunctionEnumRuleCall_2_1_0()); }
		ruleBooleanFunction
		{ after(grammarAccess.getBooleanOperationExpressionAccess().getOperationBooleanFunctionEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationExpressionAccess().getRightExpressionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getBooleanOperationExpressionAccess().getRightExpressionEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getBooleanOperationExpressionAccess().getRightExpressionEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getBooleanOperationExpressionAccess().getRightExpressionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanOperationExpression__LeftAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanOperationExpressionAccess().getLeftExpressionCrossReference_6_0()); }
		(
			{ before(grammarAccess.getBooleanOperationExpressionAccess().getLeftExpressionEStringParserRuleCall_6_0_1()); }
			ruleEString
			{ after(grammarAccess.getBooleanOperationExpressionAccess().getLeftExpressionEStringParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getBooleanOperationExpressionAccess().getLeftExpressionCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__TransformationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationCallAccess().getTransformationTransformationCrossReference_3_0()); }
		(
			{ before(grammarAccess.getTransformationCallAccess().getTransformationTransformationEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransformationCallAccess().getTransformationTransformationEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getTransformationCallAccess().getTransformationTransformationCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__ParametersAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_4_2_0()); }
		(
			{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_4_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_4_2_0_1()); }
		)
		{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TransformationCall__ParametersAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_4_3_1_0()); }
		(
			{ before(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_4_3_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldEStringParserRuleCall_4_3_1_0_1()); }
		)
		{ after(grammarAccess.getTransformationCallAccess().getParametersTableFieldCrossReference_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterExpression__ParameterAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterExpressionAccess().getParameterParameterCrossReference_3_0()); }
		(
			{ before(grammarAccess.getParameterExpressionAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getParameterExpressionAccess().getParameterParameterEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getParameterExpressionAccess().getParameterParameterCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringConstantExpression__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringConstantExpressionAccess().getValueEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getStringConstantExpressionAccess().getValueEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanConstantExpression__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanConstantExpressionAccess().getValueValueKeyword_0_0()); }
		(
			{ before(grammarAccess.getBooleanConstantExpressionAccess().getValueValueKeyword_0_0()); }
			'value'
			{ after(grammarAccess.getBooleanConstantExpressionAccess().getValueValueKeyword_0_0()); }
		)
		{ after(grammarAccess.getBooleanConstantExpressionAccess().getValueValueKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerConstantExpression__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerConstantExpressionAccess().getValueEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getIntegerConstantExpressionAccess().getValueEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__StatementAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInExpressionAccess().getStatementExpressionCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getInExpressionAccess().getStatementExpressionEStringParserRuleCall_2_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getInExpressionAccess().getStatementExpressionEStringParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getInExpressionAccess().getStatementExpressionCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__ConstantSetAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionCrossReference_5_0()); }
		(
			{ before(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InExpression__ConstantSetAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionEStringParserRuleCall_6_1_0_1()); }
			ruleEString
			{ after(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionEStringParserRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getInExpressionAccess().getConstantSetConstantExpressionCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__ConditionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getConditionExpressionCrossReference_3_0()); }
		(
			{ before(grammarAccess.getConditionalStatementAccess().getConditionExpressionEStringParserRuleCall_3_0_1()); }
			ruleEString
			{ after(grammarAccess.getConditionalStatementAccess().getConditionExpressionEStringParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getConditionalStatementAccess().getConditionExpressionCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__BooleanoperationexpressionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionBooleanOperationExpressionCrossReference_5_0()); }
		(
			{ before(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionBooleanOperationExpressionEStringParserRuleCall_5_0_1()); }
			ruleEString
			{ after(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionBooleanOperationExpressionEStringParserRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getConditionalStatementAccess().getBooleanoperationexpressionBooleanOperationExpressionCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__IfBodyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getIfBodyStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStatementAccess().getIfBodyStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__IfBodyAssignment_9_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getIfBodyStatementParserRuleCall_9_1_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStatementAccess().getIfBodyStatementParserRuleCall_9_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__ElseBodyAssignment_13
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getElseBodyStatementParserRuleCall_13_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStatementAccess().getElseBodyStatementParserRuleCall_13_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalStatement__ElseBodyAssignment_14_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalStatementAccess().getElseBodyStatementParserRuleCall_14_1_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionalStatementAccess().getElseBodyStatementParserRuleCall_14_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__OutputTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParseExpressionAccess().getOutputTypeTypeEnumRuleCall_2_1_0()); }
		ruleType
		{ after(grammarAccess.getParseExpressionAccess().getOutputTypeTypeEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParseExpression__ExpressionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParseExpressionAccess().getExpressionExpressionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getParseExpressionAccess().getExpressionExpressionEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getParseExpressionAccess().getExpressionExpressionEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getParseExpressionAccess().getExpressionExpressionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConstantExpression__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatConstantExpressionAccess().getValueEFloatParserRuleCall_3_0()); }
		ruleEFloat
		{ after(grammarAccess.getFloatConstantExpressionAccess().getValueEFloatParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__OperationAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationExpressionAccess().getOperationBinaryFunctionEnumRuleCall_2_1_0()); }
		ruleBinaryFunction
		{ after(grammarAccess.getBinaryOperationExpressionAccess().getOperationBinaryFunctionEnumRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationExpressionAccess().getRightExpressionCrossReference_4_0()); }
		(
			{ before(grammarAccess.getBinaryOperationExpressionAccess().getRightExpressionEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getBinaryOperationExpressionAccess().getRightExpressionEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getBinaryOperationExpressionAccess().getRightExpressionCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperationExpression__LeftAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationExpressionAccess().getLeftExpressionCrossReference_6_0()); }
		(
			{ before(grammarAccess.getBinaryOperationExpressionAccess().getLeftExpressionEStringParserRuleCall_6_0_1()); }
			ruleEString
			{ after(grammarAccess.getBinaryOperationExpressionAccess().getLeftExpressionEStringParserRuleCall_6_0_1()); }
		)
		{ after(grammarAccess.getBinaryOperationExpressionAccess().getLeftExpressionCrossReference_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__LabelAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getLabelEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAccess().getLabelEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeEnumRuleCall_4_1_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
