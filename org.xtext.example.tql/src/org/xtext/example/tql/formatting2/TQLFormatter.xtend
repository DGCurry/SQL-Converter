/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.tql.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.tql.domainmodel.TQL
import org.xtext.example.tql.services.TQLGrammarAccess
import tqlModel.SourceTable

class TQLFormatter extends AbstractFormatter2 {
	
	@Inject extension TQLGrammarAccess

	def dispatch void format(TQL tQL, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (block : tQL.blocks) {
			block.format
		}
	}

	def dispatch void format(SourceTable sourceTable, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (tableField : sourceTable.columns) {
			tableField.format
		}
	}
	
	// TODO: implement for TargetTable, MappingSourceTable, MappingTargetTable, Transformation, MappingField, ConditionalStatement
}
